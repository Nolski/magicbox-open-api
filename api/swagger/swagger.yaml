swagger: "2.0"
info:
  version: "0.0.1"
  title: Population with Geo API
# during dev, should point to your local machine
host: localhost:8000
# basePath prefixes all resource paths
basePath: /api/
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json

x-volos-resources:
  #Defines our cache
  cache:
      ## Uncomment one cache provider
      # provider: volos-cache-apigee
      provider: volos-cache-memory
      #provider: volos-cache-redis
      options:
        name: weather-cache
        ttl: 90000000

paths:
  /mosquito/{kind}:
    # binds a127 app logic to a route
    x-swagger-router-controller: general
    x-volos-apply:
      # Applies the cache to our endpoint
      cache:
        # Gets the cache name by calling
        # cacheKey() in /helpers/volos.js
        key:
            helper: volos
            function: cacheMosquitoKinds
    get:
      description: Returns all population metadata for requested country - arg, bra, col...etc.
      parameters:
        # - name: format
        #   type: string
        #   in: path
        #   required: true
        - name: kind
          type: string
          in: path
          required: true
      # used as the method name of the controller
      operationId: general
      responses:
        "200":
          description: Success
          examples:
            application/json: {
                              "data_kind": "aegypti",
                              "data": {
                                "abw": [
                                {
                                  "country": "abw",
                                  "data_source": "simon_hay",
                                  "shapefile_set": "gadm2-8",
                                  "admin_level": "0",
                                  "sum": 0.92733,
                                  "sq_km": 70,
                                  "density": 0.013247571428571428,
                                  "raster": "aegypti"
                                }
                                ]
                              }
                            }
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MosquitoKindResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  #/population/{format}/{country}:
  /population:
    # binds a127 app logic to a route
    x-swagger-router-controller: general
    x-volos-apply:
      # Applies the cache to our endpoint
      cache:
        # Gets the cache name by calling
        # cacheKey() in /helpers/volos.js
        key:
            helper: volos
            function: cachePopCountries
    get:
      description: Returns all countries for which we have population
      # used as the method name of the controller
      operationId: general
      responses:
        "200":
          description: Success
          examples:
            application/json: { "data_kind": "population",
                                "data": {
                                  "afg": [
                                        { "country": "afg",
                                        "data_source": "worldpop",
                                        "shapefile_set": "gadm2-8",
                                        "admin_level": "2",
                                        "sum": 45155184,
                                        "sq_km": 248596,
                                        "density": 181.64083090637018,
                                        "raster": "popmap15adj" }
                                  ]
                                }
                              }
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PopulationResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  #/population/{format}/{country}:
  /population/{country}:
    # binds a127 app logic to a route
    x-swagger-router-controller: population
    x-volos-apply:
      # Applies the cache to our endpoint
      cache:
        # Gets the cache name by calling
        # cacheKey() in /helpers/volos.js
        key:
            helper: volos
            function: cacheCountry
    get:
      description: Returns all population metadata for requested country - arg, bra, col...etc.
      parameters:
        # - name: format
        #   type: string
        #   in: path
        #   required: true
        - name: country
          type: string
          in: path
          required: true
      # used as the method name of the controller
      operationId: country
      responses:
        "200":
          description: Success
          examples:
            application/json: { "data_kind": "population",
                                "data": {
                                  "afg": [
                                        { "country": "afg",
                                        "data_source": "worldpop",
                                        "shapefile_set": "gadm2-8",
                                        "admin_level": "2",
                                        "sum": 45155184,
                                        "sq_km": 248596,
                                        "density": 181.64083090637018,
                                        "raster": "popmap15adj" }
                                  ]
                                }
                              }
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PopulationCountryResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /cases/{kind}:
    # binds a127 app logic to a route
    x-swagger-router-controller: general
    x-volos-apply:
      # Applies the cache to our endpoint
      cache:
        # Gets the cache name by calling
        # cacheKey() in /helpers/volos.js
        key:
            helper: volos
            function: cacheZikaCases
    get:
      description: Returns JSON with metadata regarding cases for specified kind
      parameters:
        - name: kind
          type: string
          in: path
          required: true
      operationId: getCases
      responses:
        "200":
          description: Success
          examples:
            application/json: { "cases": {
                                  "2016-11-17": {
                                    "can": {
                                        "country": "Canada",
                                        "autochthonous_cases_suspected": 0,
                                        "autochthonous_cases_confirmed": 0,
                                        "imported_cases": 374,
                                        "incidence_rate": 0,
                                        "deaths": 0,
                                        "confirmed_congenital": 0,
                                        "population_x_1k": 36286,
                                        "congenital_suspected": 0,
                                        "congenital_probable": 0,
                                        "gbs_total": 0,
                                        "gbs_confirmed": 0
                                    }
                                  }
                                }
                              }
          schema:
            # a pointer to a definition
            $ref: "#/definitions/casesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /cases/{kind}/{date}:
    # binds a127 app logic to a route
    x-swagger-router-controller: general
    x-volos-apply:
      # Applies the cache to our endpoint
      cache:
        # Gets the cache name by calling
        # cacheKey() in /helpers/volos.js
        key:
            helper: volos
            function: cacheZikaCases
    get:
      description: Returns JSON with metadata regarding zika cases
      parameters:
        - name: kind
          type: string
          in: path
          required: true
        - name: date
          type: string
          in: path
          required: true
      operationId: getCases
      responses:
        "200":
          description: Success
          examples:
            application/json: { "cases": {
                                  "2016-11-17": {
                                    "can": {
                                        "country": "Canada",
                                        "autochthonous_cases_suspected": 0,
                                        "autochthonous_cases_confirmed": 0,
                                        "imported_cases": 374,
                                        "incidence_rate": 0,
                                        "deaths": 0,
                                        "confirmed_congenital": 0,
                                        "population_x_1k": 36286,
                                        "congenital_suspected": 0,
                                        "congenital_probable": 0,
                                        "gbs_total": 0,
                                        "gbs_confirmed": 0
                                    }
                                  }
                                }
                              }
          schema:
            # a pointer to a definition
            $ref: "#/definitions/casesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  MosquitoKindResponse:
    required:
      - countries
    properties:
      countries:
        type: object
  PopulationResponse:
    required:
      - countries
    properties:
      countries:
        type: object
  PopulationCountryResponse:
    required:
       - type
    properties:
      type:
        type: 'string'
  casesResponse:
    required:
      - kind
      - cases
    properties:
      kind:
        type: string
      cases:
        type: object

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: object
